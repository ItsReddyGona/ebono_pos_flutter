name: Stage Distributor Build

on:
  # Allow manual trigger
  workflow_dispatch:

  # Allow auto-trigger on push to the 'deployment' branch
  #push:
  #branches:
  #- Deployment

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Get version
      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "ðŸ“‹ Version: $VERSION"

  install_dependencies:
    name: Install Dependencies
    needs: setup
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Base development tools
      - name: Install base dev tools
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: clang cmake git ninja-build pkg-config
          version: 1.0

      # UI libraries
      - name: Install UI libraries
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgtk-3-dev
          version: 1.0
          
      # System libraries
      - name: Install system libraries
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: liblzma-dev libstdc++-12-dev libunwind-dev
          version: 1.0

      # Media libraries
      - name: Install media libraries
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

  setup_flutter:
    name: Setup Flutter
    needs: install_dependencies
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Set up Flutter with cache
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.1"
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}
      
      # Cache pub dependencies
      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      # Install Flutter dependencies
      - name: Install Flutter dependencies
        run: flutter pub get
        
      # Cache Flutter Distributor
      - name: Cache Flutter Distributor
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache/bin
          key: ${{ runner.os }}-flutter-distributor-cache
 
      # Activate Flutter Distributor (only if not cached)
      - name: Activate Flutter Distributor
        run: |
          if [ ! -f ~/.pub-cache/bin/flutter_distributor ]; then
            dart pub global activate flutter_distributor
          fi

  build:
    name: Build Application
    needs: [setup, setup_flutter]
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Set up Flutter with cache
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.1"
          cache: true
      
      # Restore Flutter Distributor
      - name: Restore Flutter Distributor cache
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache/bin
          key: ${{ runner.os }}-flutter-distributor-cache
        
      # Install Flutter dependencies
      - name: Install Flutter dependencies
        run: flutter pub get
        
      # Generate the build using Flutter Distributor
      - name: Build Stage Release
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          flutter_distributor release --name=stage --jobs=release-stage-linux-deb

      # Upload artifacts (deb file)
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: stage-release-${{ needs.setup.outputs.version }}
          path: dist/